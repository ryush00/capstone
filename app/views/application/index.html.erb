<style>
    html, body {
        height: 100%;
    }

    .min-100 {
        min-height: 100vh;
    }

    /* Overlay */
    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: none;
        z-index: 999;
    }

    .overlay.active {
        display: block;
    }

    #map {
        z-index: 1; /* Ensure the map stays behind the My Information panel */
    }

    @media (max-width: 768px) {
        #map {
            height: 300px; /* Adjust map height for smaller screens */
        }

        .my-info-panel {
            width: 80vw; /* Make it less wide on smaller screens */
        }
    }
</style>

<header style="background-color: #f5f5f5;" class="row text-center px-0 py-3">
    <div class="d-flex align-items-center justify-content-center">
        <%= image_tag "carpool.png", alt: "Carpool", class: "me-3", style: "height: 90px;" %>
    </div>
    
    <!-- Navigation Bar -->
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container-fluid d-flex justify-content-center">
            <button class="navbar-toggler mt-0" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse justify-content-center" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item" style="margin: 0 15px;">
                        <a class="nav-link" href="<%= new_pool_path %>" style="font-size: 1.2rem;"><strong>카풀 만들기</strong></a>
                    </li>
                    <li class="nav-item" style="margin: 0 15px;">
                        <a class="nav-link" href="<%= pools_path %>" style="font-size: 1.2rem;"><strong>카풀 찾기</strong></a>
                    </li>
                    <li class="nav-item" style="margin: 0 15px;">
                        <a class="nav-link offcanvas-trigger" id="myInfoButton" href="#MyInfo" role="button" style="font-size: 1.2rem;"><strong>내 정보</strong></a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
</header>

<!-- Offcanvas for My Information -->
<div class="offcanvas offcanvas-end" tabindex="-1" id="MyInfo" aria-labelledby="MyInfoLabel">
    <div class="offcanvas-header">
        <h5 id="MyInfoLabel">내 정보</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <% if user_signed_in? %>
            <div class="text-left">
                <h5>
                    <%= button_to "로그아웃", destroy_user_session_path, method: :delete, class: "btn btn-danger w-100" %>
                </h5>
                <h5>
                    <%= button_to "회원 정보 수정", edit_user_registration_path, method: :get, class: "btn btn-outline-success w-100" %>
                </h5>
            </div>
        <% else %>
            <h5><%= button_to "로그인", new_user_session_path, method: :get, class: "btn btn-primary w-100" %></h5>
        <% end %>
    </div>
</div>

<div class="row flex-fill" id="map"></div>

<div class="offcanvas offcanvas-bottom" tabindex="-1" id="carpoolCreate" aria-labelledby="carpoolCreateLabel" style="height: 70vh; background-color: rgba(0, 0, 0, 0.5);">
    <div class="offcanvas-header text-center justify-content-center">
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
            <div class="carpool-form rounded-3" id="carpoolFormSection" style="border: none;">
                <%= render "pools/form", pool: Pool.new %>
            </div>           
    </div>
</div>


<div class="offcanvas offcanvas-bottom" tabindex="-1" id="carpoolFind" aria-labelledby="carpoolFindLabel" style="height: 70vh; background-color: rgba(0, 0, 0, 0.5);">
    <div class="offcanvas-header text-center justify-content-center">
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body d-flex align-items-center justify-content-center" style="background-color: transparent;">
        <main class="container" style="border: none; background-color: transparent;">
            <!-- Carpool List -->
            <section class="carpool-list text-center rounded-3" id="carpoolListSection" style="border: none;">
                <h2 class="text-center">카풀 목록</h2>
                <%= render "pools/list" %>
            </section>              
        </main>
    </div>
</div>

<script>
    // const carpoolForm = document.getElementById('carpoolForm');

    // // Handle form submission and add to the list
    // carpoolForm.addEventListener('submit', function (e) {
    //     const carpoolCreate = document.getElementById('carpoolCreate');
    //     var carpoolFind = document.getElementById('carpoolFind');
    //     var carpoolFindOffcanvas = bootstrap.Offcanvas.getOrCreateInstance(carpoolFind);
    //     carpoolFindOffcanvas.show(); // 카풀 찾기 offcanvas 보이기
    // });


</script>

<script type="text/javascript" src="https://oapi.map.naver.com/openapi/v3/maps.js?ncpClientId=ab6enlyf6d"></script>

<script>
    // Ruby 데이터를 JavaScript로 전달
    var places = <%= raw @places.to_json %>;

    // 출발지와 도착지를 확인 (place_type 사용)
    var startPlace = places.find(place => place.place_type === 'start');
    var endPlace = places.find(place => place.place_type === 'end');

    // Naver Maps 설정
    var mapOptions = {
        center: new naver.maps.LatLng(35.96020, 126.95292),
        zoom: 14
    };

    var map = new naver.maps.Map('map', mapOptions);

    // 경로를 결정하는 함수
    function getPath(startPlace, endPlace) {
        if (startPlace.name === '익산역' && endPlace.name === '원광대') {
            // 익산역 -> 원광대 경로
            return [
                new naver.maps.LatLng(35.9403, 126.9472),
                new naver.maps.LatLng(35.9468, 126.94984),
                new naver.maps.LatLng(35.9521, 126.952),
                new naver.maps.LatLng(35.9553, 126.952455),
                new naver.maps.LatLng(35.9635, 126.9535),
                new naver.maps.LatLng(35.9653, 126.953244),
                new naver.maps.LatLng(35.9667, 126.95296),
                new naver.maps.LatLng(35.96695, 126.95323),
                new naver.maps.LatLng(35.9689, 126.954765),
                new naver.maps.LatLng(35.9691, 126.95485),
                new naver.maps.LatLng(35.9692, 126.95495),
                new naver.maps.LatLng(35.9692, 126.95515),
                new naver.maps.LatLng(35.96895, 126.9555),
                new naver.maps.LatLng(35.9692, 126.9569),
                new naver.maps.LatLng(35.9685, 126.9569)
            ];
        } else if (startPlace.name === '원광대' && endPlace.name === '익산역') {
            // 원광대 -> 익산역 경로
            return [
                new naver.maps.LatLng(35.9685, 126.9569),
                new naver.maps.LatLng(35.9692, 126.9569),
                new naver.maps.LatLng(35.96895, 126.9555),
                new naver.maps.LatLng(35.9692, 126.95515),
                new naver.maps.LatLng(35.9692, 126.95495),
                new naver.maps.LatLng(35.9691, 126.95485),
                new naver.maps.LatLng(35.9689, 126.954765),
                new naver.maps.LatLng(35.96695, 126.95323),
                new naver.maps.LatLng(35.9667, 126.95296),
                new naver.maps.LatLng(35.9653, 126.953244),
                new naver.maps.LatLng(35.9635, 126.9535),
                new naver.maps.LatLng(35.9553, 126.952455),
                new naver.maps.LatLng(35.9521, 126.952),
                new naver.maps.LatLng(35.9468, 126.94984),
                new naver.maps.LatLng(35.9403, 126.9472)
            ];
        } else {
            // 기본 경로
            return places.map(place => new naver.maps.LatLng(place.latitude, place.longitude));
        }
    }

    // `getPath` 함수를 사용해 경로 생성
    var path = getPath(startPlace, endPlace);

    // Polyline 생성 (path 기반)
    var polyline = new naver.maps.Polyline({
        map: map,
        path: path,
        strokeColor: '#FF0000', // 기존 색상 유지
        strokeOpacity: 0.6,
        strokeWeight: 3
    });

    // 마커 추가 (places 기반)
    places.forEach(place => {
        new naver.maps.Marker({
            position: new naver.maps.LatLng(place.latitude, place.longitude),
            map: map,
            title: place.name
        });
    });

    // Turbo 사용 시 Map 파괴
    document.addEventListener("turbo:before-cache", function() {
        map.destroy();
    });
</script>
